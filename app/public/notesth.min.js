angular.module('noteSth', [
    'ngRoute',
    'angularCharts',
    'ngCookies'
])
.config(function($routeProvider, $locationProvider) {
    $routeProvider
        .when('/login', {
            templateUrl: '/views/login.html',
            controller: 'login'
        })
        .when('/register', {
            templateUrl: '/views/register.html',
            controller: 'register'
        })
        .when('/dash', {
            templateUrl: '/views/dash.html',
            controller: 'dashboard'
        })
        .when('/', {
            templateUrl: '/views/index.html',
            controller: 'home'
        })
        .when('/privacy', {
            templateUrl: '/views/privacy.html',
            controller: ''
        })
        .otherwise({
            redirectTo: '/'
        });

    $locationProvider.html5Mode({
        enabled: true,
        requireBase: false
    });
})

var app = angular.module('noteSth');
app.controller('base', ['$scope', 'dataS', '$cookieStore', '$location',

    function($scope, dataS, $cookieStore, $location) {
       var token = $cookieStore.get('token');
        if(token && token.length > 2) {
           dataS.getData('/user', token)
           .success(function(data){
               $scope.usr = data;
           })
       }
       $scope.callmodal = function(type) {
           $scope.modal = type;
       }
       $scope.logout = function(){
         $cookieStore.put('token', null);
         $cookieStore.put('id', null);
         $location.path('/');
       }

    }
]);

angular.module('noteSth').service('config', function ( ) {
    return {
        API : "http://localhost:4000/api",
        IMG : "http://localhost:4000/img"

    }
});

angular.module('noteSth').service('dataS',  function ($http, config, $cookieStore) {
    var headers = function(token) {
        if(token) {
            return {
                'Content-type': 'application/json',
                'x-access-token': $cookieStore.get('token')
            }
        } else {
            return {
                'Content-type': 'application/json'
            }
        }
    }
    return {
        getData: function (url, token) {
            return $http({
                method: 'GET',
                url: config.API + url,
                headers: headers(token)
            });
        },
        postData: function (url, data, token) {
            return $http({
                method: 'POST',
                url: config.API + url,
                data: data,
                headers: headers(token)
            });
        },
        editData: function (url, data, token) {
            return $http({
                method: 'PUT',
                url: config.API + url,
                data: data,
                headers: headers(token)
            });
        },
        delData: function (url, hash, token) {
            return $http({
                method: 'DELETE',
                data: hash,
                url: config.API + url,
                headers: headers(token)
            });
        }
    };
});

var app = angular.module('noteSth');
app.controller('dashboard', ['$scope', 'dataS', '$cookieStore', '$location', '$rootScope', 'config',

  function($scope, dataS, $cookieStore, $location, $rootScope, config) {
    dataS.getData('/websites', true)
      .success(function(data) {
        $scope.websites = data;
        for (var i = 0, len = $scope.websites.length; i < len; i++) {
            $scope.responses[$scope.websites[i].website] = {data: [], series: ['']};
            $scope.charts[$scope.websites[i].website] = {data: [], series: ['']};
          getXRecords(20, $scope.websites[i]);
          new Status($scope.websites[i]);
          fillChart($scope.websites[i]);
          updateUptime();
        }
      })
    $scope.statuses = [];
    $scope.responses = {};
    $scope.charts = {};
    var indexes = 0;

    function fillChart(wb) {
      var data = [];
      if(wb.up != 0 && wb.up != null) {
         data.push({x: 'up', y: [wb.up]});
      }
      if(wb.down != 0 && wb.down != null) {
        data.push({x: 'down', y: [wb.down]});
      }
      if (data !== []) {
        $scope.charts[wb.website]['data'] = data;
      } else {
        $scope.charts[wb.website]['data'] = null;
      }
      indexes++;
    }

    function updateUptime() {
      dataS.getData('/websites', true)
        .success(function(data) {
          $scope.websites = data;
          for (var i = 0, len = $scope.websites.length; i < len; i++) {
            fillChart($scope.websites[i]);
          }
        })
        setTimeout(function() {
          updateUptime()
        },  10 * 60 * 1000);
    }

    function Status(website) {

      dataS.getData('/status/' + website._id, true)
        .success(function(data) {
          if (data && data.hasOwnProperty('website') && data.response !== null) {
            $scope.statuses.push(data);
            $scope.responses[data.website]['data'].push({
              x: indexes,
              y: [data.response]
            });
            indexes++;

            if ($scope.responses[data.website]['data'].length >= 25) {
              $scope.responses[data.website]['data'].splice(0, 1);

            }
          }
        })

      setTimeout(function() {
        Status(website)
      }, website.timeout * 60000);
    }
    function getXRecords(nmb, website) {
        dataS.getData('/xstatus/' + website._id +'/'+ nmb , true)
        .success(function(data){
          for (var i = 0, len = data.length; i < len; i++) {
            if (data[i] && data[i].hasOwnProperty('website') && data[i].response != null) {
              $scope.responses[data[i]['website']]['data'].push({
                x: indexes,
                y: [data[i].response]
              });
              indexes++;
            }
          }

        })
    }

    $scope.getStat = function(ele) {
      for (var i = 0, len = $scope.statuses.length; i < len; i++) {
        if ($scope.statuses[i] !== null && $scope.statuses[i].website == ele) {
          return {
            status: $scope.statuses[i].status,
            response: $scope.statuses[i].response
          };
        }
      }
      return null;
    }
    $scope.sets = {
      delete: function(website, id) {
        if(confirm('Are you sure you want to delete this item?')) {
        dataS.delData('/websites', {'website':website}, true)
        .success(function(data) {
            $scope.websites.splice(id, 1);
        })
        }
      },
      edit: function(website, id) {
        var time = prompt("Please enter timeout in MINUTES", "1");
        if (time != null) {
          dataS.editData('/websites', {'website':website, 'timeout': time}, true)
          .success(function(data) {
              $scope.websites[id].timeout = time;
          })
        }
      }
    }
    $scope.server = config.IMG + '/';
    $rootScope.$on('siteAdd', function (event, data) {
      // console.log(data); // 'Some data'
      $scope.websites.push(data);
      new Status(data);
    });

    $scope.chartconf = {
      legend: {
        display: false,
        position: 'left',
        // you can have html in series name
        htmlEnabled: false,
         waitForHeightAndWidth: false
      }
    }
    $scope.sitemap = ['http://test.pl', 'http://test.pl/demo', 'http://test.pl/demo/asdlas/1234', 'http://test.pl/demo/asdlas/12342', 'http://test.pl/demo/asdlas/12346', 'http://test.pl/demo/asdlas/1234e', 'http://test.pl/demo/asdlas/1234wq', 'http://test.pl/demo/asdlas/1234azxczx', 'http://test.pl/demo/asdlas/123asd4', 'http://test.pl/demo/asdlas/123412', 'http://test.pl/demo/asdlas/1234ccc', 'http://test.pl/demo/asdlas/1234sa']




  }
]);

var app = angular.module('noteSth');
app.controller('home', ['$scope', 'dataS', '$cookieStore', '$location',

    function($scope, dataS, $cookieStore, $location) {
       

    }
]);

angular.module('noteSth').directive('modal', function() {
   return {
       restrict: 'E',
       link: function(scope, element, attrs) {
           scope.getContentUrl = function() {
               if(attrs.type) {
                return '/views/modals/' + attrs.type + '.html';
                   } else {
                       return ;
                   }
           }
       },
       template: '<div class="note-modal" ng-include="getContentUrl()"></div>'
   }
});

var app = angular.module('noteSth');
app.controller('websites', ['$scope', 'dataS', '$cookieStore', '$location', '$rootScope',

    function($scope, dataS, $cookieStore, $location, $rootScope) {

        $scope.id = $cookieStore.get('id');
       $scope.website = {
           body: {},
           send: function() {
               dataS.postData('/websites', $scope.website.body, true)
               .success(function(data) {
                   $rootScope.$emit('siteAdd', data);
               })
           }
       }

    }
]);

var app = angular.module('noteSth');
app.controller('login', ['$scope', 'dataS', '$cookieStore', '$location',

    function($scope, dataS, $cookieStore, $location) {
      var token = $cookieStore.get('token');
       if(token && token.length > 2) {
          dataS.getData('/user', token)
          .success(function(data){
            console.log(data);
              if(data) {
                $location.path('/dash');
              }
          })
      }
        $scope.logindo = function() {
                dataS.postData('/auth', $scope.login)
                .success(function(data) {
                    if(data.token) {
                        $cookieStore.put('token', data.token);
                        $cookieStore.put('id', data.id);
                        $location.path('/dash');
                    }
                })

        }
    }
]);

var app = angular.module('noteSth');
app.controller('register', ['$scope', 'dataS',

    function($scope, dataS) {
       
        $scope.registerdo = function() {
                dataS.postData('http://localhost:4000/api/user', $scope.login)
                .success(function(data) {
                    console.log(data);
                })
                
        }
    }
]);  